% \iffalse     META-COMMENT
% Source File: japa.dtx
% $Revision: 1.1 $
% $Date: 2005-02-06 11:25:42 +0900 (Sun, 06 Feb 2005) $
%
% Copyright (C) 1998-2002  MIYAMOTO Yusuke
% \fi
\def\filename{japa.dtx}
\def\fileversion{1.2.0}
\def\filedate{2006/01/16}
%  \CheckSum{0}
%
% \changes{v1.0a}{2000/10/01}
%         {japa.sty v1.0a}
% \changes{v1.0a}{2000/01/13}
%         {japa.sty 1.1}
% 
% \iffalse
%<*package>
\NeedsTeXFormat{LaTeX2e}
\ProvidesClass{japa}[\filedate]
%</package>
%<*driver>
\documentclass[a4j]{jarticle}
  \usepackage{doc}
  \OnlyDescription
  \RecordChanges
  \MakeShortVerb{\|}
\begin{document}
  \title{日本語 APA like 参考文献リストパッケージ{\fileversion}}
  \author{MIYAMOTO Yusuke\thanks{大阪大学大学院人間科学研究科 行動学専攻}}
  \maketitle
  \DocInput{\filename}
\end{document}
%</driver>
% \fi
%
% \section*{概要}
% 日本語版 APA like な参考文献リストを作成するためのパッケージです．
% BiBTeX スタイルファイル |japa.bst| と共に使用します．
% 
% \StopEventually{}
% \newpage
% 
%<*package>
% \section*{コードの解説}
% 
% \subsection*{}
% \begin{macro}{bibname}
% 参考文献リストの章題を指定します．
%    \begin{macrocode}
\@ifundefined{bibname}{\newcommand{\bibname}{参考文献}}{}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{bibhang}
% 各項目の字下げ幅を指定します．
%    \begin{macrocode}
\newdimen\bibhang \setlength\bibhang{-1zw}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{newblock}
% ブロック間のアキを指定します．
%    \begin{macrocode}
\def\newblock{\hskip .8em\@plus.33em\@minus.07em}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{@biblabel}
% 本来は項目のラベルとして表示されるテキストを指定するものですが，この
% スタイルでは使用しません．
%    \begin{macrocode}
\def\@biblabel#1{}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{bibitem}
% \begin{macro}{@bibitem}
% |thebibliography| 内でリスト項目の開始を指示するマクロです．
%    \begin{macrocode}
\def\bibitem{\@ifnextchar[{\@bibitem}{\@bibitem[{},{}]}}
\def\@bibitem[#1]#2{%
  \item[]
  \if@filesw{%
    \let\protect\noexpand
    \immediate\write\@auxout{\string\bibcite{#2}{#1}}}
  \fi
  \ignorespaces}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% 
% \begin{macro}{bibcite}
% |\bibcite{key}{{author},{year}}| という形式で，引用を定義します．
%    \begin{macrocode}
\def\bibcite#1#2{%
  \protect\@bibcite{#1}#2}
\def\@bibcite#1#2,#3{%
  \@newl@bel b{#1}{#2} \@newl@bel Y{#1}{#3}}
%    \end{macrocode}
% \end{macro}
% 
% \begin{macro}{cite}
% \begin{macro}{@citex}
% \begin{macro}{@cite}
% |\cite| コマンドの定義です．(\emph{author}, \emph{year}) に展開されます．
%    \begin{macrocode}
\DeclareRobustCommand\cite{%
  \@ifnextchar [{\@tempswatrue\@citex}{\@tempswafalse\@citex[]}}
\def\@cite#1#2{(#1\if@tempswa #2\fi)}
\def\@citex[#1]#2{%
  \def\@citea{}
  \@cite{\ignorespaces\@for\@citeb:=#2\do{%
    \@citea\def\@citea{;\penalty\@m\ }%
    \edef\@citeb{\expandafter\@firstofone\@citeb}%
    \if@filesw\immediate\write\@auxout{\string\citation{\@citeb}}\fi
    \@ifundefined{b@\@citeb}{%
      \mbox{\reset@font\bfseries ?}%
      \G@refundefinedtrue
      \@latex@warning
      {Citation `\@citeb' on page \thepage\space undefined}}
      {\ignorespaces\csname b@\@citeb\endcsname, \csname Y@\@citeb\endcsname}}}{#1}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% 
% \begin{macro}{citename}
% \begin{macro}{@citenamex}
% \begin{macro}{@citename}
% |\citename| コマンドの定義です．\emph{author}（\emph{year}）に展開されます．
%    \begin{macrocode}
\DeclareRobustCommand\citename{%
  \@ifnextchar [{\@tempswatrue\@citenamex}{\@tempswafalse\@citenamex[]}}
\def\@citenamex[#1]#2{%
  \let\@citea\@empty
  \@citename{\@for\@citeb:=#2\do{%
    \@citea\def\@citea{，\penalty\@m\ }%
    \edef\@citeb{\expandafter\@firstofone\@citeb}%
    \if@filesw\immediate\write\@auxout{\string\citation{\@citeb}}\fi
    \@ifundefined{b@\@citeb}{%
      \mbox{\reset@font\bfseries ?}%
      \G@refundefinedtrue
      \@latex@warning
        {Citation `\@citeb' on page \thepage\space undefined}}
    { \csname b@\@citeb\endcsname (\csname Y@\@citeb\endcsname)}}}{#1}}
\def\@citename#1#2{#1\if@tempswa #2\fi}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{citeyear}
% \begin{macro}{@citeyearx}
% \begin{macro}{@citeyear}
% |\citeyear| コマンドの定義です．(\emph{year}) に展開されます．
%    \begin{macrocode}
\DeclareRobustCommand\citeyear{%
  \@ifnextchar [{\@tempswatrue\@citeyearx}{\@tempswafalse\@citeyearx[]}}
\def\@citeyearx[#1]#2{%
  \let\@citea\@empty
  \@citeyear{\@for\@citeb:=#2\do{%
    \@citea\def\@citea{，\penalty\@m\ }%
    \edef\@citeb{\expandafter\@firstofone\@citeb}%
    \if@filesw\immediate\write\@auxout{\string\citation{\@citeb}}\fi
    \@ifundefined{b@\@citeb}{%
      \mbox{\reset@font\bfseries ?}%
      \G@refundefinedtrue
      \@latex@warning
        {Citation `\@citeb' on page \thepage\space undefined}}
    {(\csname Y@\@citeb\endcsname)}}}{#1}}
\def\@citeyear#1#2{#1\if@tempswa #2\fi}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% 
% \begin{environment}{thebibliography}
% 参考文献リストを作成するための環境です．
%    \begin{macrocode}
\renewenvironment{thebibliography}[1]
 {%
  \@ifundefined{chapter} %
    {\section*{\bibname\@mkboth{\bibname}{\bibname}}
     \addcontentsline{toc}{section}{\bibname}}
    {\chapter*{\bibname\@mkboth{\bibname}{\bibname}}
     \addcontentsline{toc}{chapter}{\bibname}}
  \list{\relax}{
    \setlength\leftmargin{-\bibhang}
    \setlength\itemindent{\bibhang}
    \setlength\labelsep{\z@}
    \setlength\itemsep{1.2\p@}}
  \def\@noitemerr{\@latex@warning{Empty `thebibliography' environment}}
  \linespread{}\selectfont
  \sloppy
  \clubpenalty=4000
  \@clubpenalty=\clubpenalty
  \widowpenalty=4000
  \sfcode`\.\@m}
 {\endlist}
%    \end{macrocode}
% \end{environment}
%</package>
%<*style>
ENTRY {
    address
    author
    booktitle
    chapter
    edition
    editor
    howpublished
    institution
    journal
    key
    month
    note
    number
    organization
    pages
    publisher
    school
    series
    title
    type
    url
    volume
    year
    yomi }
  { is.kanji.entry }
  { label name.label year.label extra.label sort.label }


INTEGERS { output.state before.all mid.sentence after.sentence after.block }

FUNCTION {not}
{   { #0 }
    { #1 }
  if$
}

FUNCTION {and}
{   'skip$
    { pop$ #0 }
  if$
}

FUNCTION {or}
{   { pop$ #1 }
    'skip$
  if$
}

FUNCTION {init.state.consts}
{ #0 'before.all :=
  #1 'mid.sentence :=
  #2 'after.sentence :=
  #3 'after.block :=

}

STRINGS { s t }

FUNCTION {output.with.space}
{ 's :=
  output.state mid.sentence =
    { " " * write$ }
    { output.state after.block =
        { "\newblock " * write$ newline$
          "\newblock " write$
        }
        { output.state before.all =
            { write$ }
            { add.period$ " " * write$ }
          if$
        }
      if$
      mid.sentence 'output.state :=
    }
  if$
  s
}

FUNCTION {output.nonnull}
{ 's := 
  output.state mid.sentence =
    { ", " * write$ }
    { output.state after.block =
        { 
          write$
          newline$
          "\newblock " write$
        }
        { output.state before.all =
            'write$
            { add.period$ " " * write$ }
          if$
        }
      if$
      mid.sentence 'output.state :=
    }
  if$
  s
}

FUNCTION {output}
{ duplicate$ empty$
    'pop$
    'output.nonnull
  if$
}

FUNCTION {outputa}
{ duplicate$ empty$
    'pop$
    'output.with.space
  if$
}

FUNCTION {output.check}
{ 't :=
  duplicate$ empty$
    { pop$ "empty " t * " in " * cite$ * warning$ }
    'output.nonnull
  if$
}

FUNCTION {output.checka}
{ 't :=
  duplicate$ empty$
    { pop$ "empty " t * " in " * cite$ * warning$ }
    'output.with.space
  if$
}

FUNCTION {output.bibitem}
{ newline$
  "\bibitem[{" write$
  name.label write$
  "},{" write$
  year.label write$
  "}]{" write$
  cite$ write$
  "}" write$
  newline$
  ""
  before.all 'output.state :=
}

FUNCTION {fin.entry}
{ 
  add.period$
  write$
  newline$
}

FUNCTION {new.block}
{ output.state before.all =
    'skip$
    { after.block 'output.state := }
  if$
}

FUNCTION {new.sentence}
{ output.state after.block =
    'skip$
    { output.state before.all =
	'skip$
	{ after.sentence 'output.state := }
      if$
    }
  if$
}


FUNCTION {new.block.checka}
{ empty$
    'skip$
    'new.block
  if$
}

FUNCTION {new.block.checkb}
{ empty$
  swap$ empty$
  and
    'skip$
    'new.block
  if$
}

FUNCTION {new.sentence.checka}
{ empty$
    'skip$
    'new.sentence
  if$
}

FUNCTION {new.sentence.checkb}
{ empty$
  swap$ empty$
  and
    'skip$
    'new.sentence
  if$
}

FUNCTION {field.or.null}
{ duplicate$ empty$
    { pop$ "" }
    'skip$
  if$
}


FUNCTION {emphasize}
{ duplicate$ empty$
    { pop$ "" }
    { duplicate$ is.kanji.str$
	'skip$
	{ "{\em " swap$ * "}" * }
      if$
    }
  if$
}

INTEGERS { nameptr namesleft numnames }

FUNCTION {format.names}
{ 's :=
  #1 'nameptr :=
  s num.names$ 'numnames :=
  numnames 'namesleft :=
    { namesleft #0 > }
    { s nameptr "{ff}{ll}" format.name$ is.kanji.str$
	{ s nameptr "{ff}" format.name$ text.length$ #2 =
	  s nameptr "{ll}" format.name$ text.length$ #2 =
	  or
	    { s nameptr "{ff} {ll}" format.name$ 't := }
	    { s nameptr "{ff}{ll}" format.name$ 't := }
	  if$
	}
 	{ s nameptr "{vv~}{ll}{, jj}{, f.}" format.name$ 't := }
      if$
      nameptr #1 >
	{ namesleft #1 >
	    { s is.kanji.str$
 		{"・" * t * }
		{", " * t * }
	      if$
	    }
	    { t "others" =
 		{ s is.kanji.str$
 			{" ほか" * }
 			{", et~al." * }
 		  if$
 		}
 		{ s is.kanji.str$
 		    {"・" * t * }
		    {", \& " * t * }
 		  if$
 		}
	      if$
	    }
	  if$
	}
	't
      if$
      nameptr #1 + 'nameptr :=
      namesleft #1 - 'namesleft :=
    }
  while$
}

FUNCTION {format.authors}
{ author empty$
    { "" }
    { author format.names }
  if$
}

FUNCTION {format.editors}
{ editor empty$
    { "" }
    { editor format.names
      editor num.names$ #1 >
 	{ editor is.kanji.str$
 		{" (編) " * } {" (Ed.) " * } if$
 	}
 	{ editor is.kanji.str$
 		{" (編) " *} {" (Eds.) " * } if$
 	}
      if$
    }
  if$
}

FUNCTION {format.title}
{ title empty$
    { "" }
    { title }
  if$
}

% ページ区間指定の記号
FUNCTION {n.dashify}
{ 't :=
  ""
    { t empty$ not }
    { t #1 #1 substring$ "-" =
	{ t #1 #2 substring$ "--" = not
	    { "--" *
	      t #2 global.max$ substring$ 't :=
	    }
	    {   { t #1 #1 substring$ "-" = }
		{ "-" *
		  t #2 global.max$ substring$ 't :=
		}
	      while$
	    }
	  if$
	}
	{ t #1 #1 substring$ *
	  t #2 global.max$ substring$ 't :=
	}
      if$
    }
  while$
}

FUNCTION {format.date}
{ year empty$
    { "there's no year in " cite$ * warning$ }
    { year extra.label *
      month empty$
        { skip$ }
        { ", " * month * }
      if$
      "(" swap$ * ")" *
    }
  if$
}

FUNCTION {format.btitle}
{
  title emphasize
}


FUNCTION {tie.or.space.connect}
{ duplicate$ text.length$ #3 <
    { "~" }
    { " " }
  if$
  swap$ * *
}

FUNCTION {either.or.check}
{ empty$
    'pop$
    { "can't use both " swap$ * " fields in " * cite$ * warning$ }
  if$
}

FUNCTION {format.bvolume}
{ volume empty$
    { "" }
    { volume is.kanji.str$
	{ volume }
	{ is.kanji.entry
	    { volume }
	    { "Vol. " volume tie.or.space.connect }
	  if$
	}
      if$
      series empty$
	'skip$
	{ series is.kanji.str$
	    { volume empty$
		{series swap$ * }
		{series " " * swap$ * }
	      if$
	    }
	    { " of " * series emphasize * }
	  if$
	}
      if$
      "volume and number" number either.or.check
    }
  if$
}

FUNCTION {format.number.series}
{ volume empty$
    { number empty$
	{ series field.or.null }
	{ number is.kanji.str$ 
	    { number }
	    {"No." number tie.or.space.connect}
	  if$
	  series empty$
	    { "there's a number but no series in " cite$ * warning$ }
	    { series is.kanji.str$
	        { series ", " * swap$ * }
	        { " in " * series * }
	      if$
	    }
	  if$
	}
      if$
    }
    { "" }
  if$
}

FUNCTION {format.edition}
{ edition empty$
    { "" }
    { edition is.kanji.str$
	{ edition }
        { is.kanji.entry
	    {"第" edition * "版" *}
	    { output.state mid.sentence =
	      { edition "l" change.case$ " edition" * }
	      { edition "t" change.case$ " edition" * }
              if$
	    }
	  if$
        }
      if$
    }
  if$
}

INTEGERS { multiresult }

FUNCTION {multi.page.check}
{ 't :=
  #0 'multiresult :=
    { multiresult not
      t empty$ not
      and
    }
    { t #1 #1 substring$
      duplicate$ "-" =
      swap$ duplicate$ "," =
      swap$ "+" =
      or or
	{ #1 'multiresult := }
	{ t #2 global.max$ substring$ 't := }
      if$
    }
  while$
  multiresult
}

FUNCTION {format.pages}
{ pages empty$
    { "" }
    { pages multi.page.check
 	{ "pp." pages n.dashify tie.or.space.connect }
	{ "p." pages tie.or.space.connect }
      if$
    }
  if$
}


FUNCTION {format.vol.num.pages}
{ volume empty$
     {""}
     { "\textbf{" volume *  "}" * }
  if$
  number empty$
    { ", " * }
    { "(" * number * "), " *
      volume empty$
	{ "there's a number but no volume in " cite$ * warning$ }
	'skip$
      if$
    }
  if$
  pages empty$
    'skip$
    { duplicate$ empty$
	{ pop$ format.pages }
	{ ":" * pages n.dashify * }
      if$
    }
  if$
}


FUNCTION {format.chapter.pages}
{ chapter empty$
    'format.pages
    { type empty$
	{ chapter is.kanji.str$
	    { "" }
	    { is.kanji.entry
		{"章"}
		{"chapter"}
	      if$
	    }
	  if$
	}
	{ type "l" change.case$ }
      if$
      chapter is.kanji.str$ not is.kanji.entry and
          {"第" chapter * swap$ *}
          { chapter is.kanji.str$
		{chapter *}
		{chapter tie.or.space.connect}
	    if$
	  }
      if$
      pages empty$
	'skip$
	{ ", " * format.pages * }
      if$
    }
  if$
}

FUNCTION {format.in.ed.booktitle}
{ booktitle empty$
    { "" }
    { editor empty$
 	{ booktitle is.kanji.str$
 	    { " " booktitle emphasize * }
 	    { "In " booktitle emphasize * }
 	  if$
 	}
 	{ booktitle is.kanji.str$
 	    { " " format.editors * ", " * booktitle * }
 	    { "In " format.editors * ", " * booktitle emphasize * }
 	  if$
 	}
      if$
    }
  if$
}

FUNCTION {empty.misc.check}
{ author empty$ title empty$ howpublished empty$
  year empty$ note empty$
  and and and and
  key empty$ not and
    { "all relevant fields are empty in " cite$ * warning$ }
    'skip$
  if$
}

FUNCTION {format.thesis.type}
{ type empty$
    'skip$
    { pop$
      type "t" change.case$
    }
  if$
}

FUNCTION {format.tr.number}
{ type empty$
    { "Technical Report" }
    'type
  if$
  number empty$
    { "t" change.case$ }
    { number tie.or.space.connect }
  if$
}

FUNCTION {format.article.crossref}
{ key empty$
    { journal empty$
	{ "need key or journal for " cite$ * " to crossref " * crossref *
	  warning$
	  ""
	}
 	{ title is.kanji.str$
 	    { " " journal *  }
  	    { "In {\em " journal * "\/}" * }
          if$
	}
      if$
    }
    { title is.kanji.str$
 	{ " " key * }
  	{ "In " key * }
      if$
    }
  if$
  " \cite{" * crossref * "}" *
}


FUNCTION {format.crossref.editor}
{ editor is.kanji.str$
     {editor #1 "{ff}" format.name$ duplicate$
      empty$
 	{pop$ editor #1 "{ll}" format.name$}
 	'skip$
      if$
      }
      {editor #1 "{vv~}{ll}" format.name$}
  if$
  editor num.names$ duplicate$
  #2 >
    { editor is.kanji.str$
	  {pop$ " ほか" *} {pop$ ", et~al." * } if$
    }
    { #2 <
	'skip$
	{ editor #2 "{ff }{vv }{ll}{ jj}" format.name$ "others" =
 	    { editor is.kanji.str$
 		{" ほか" *} {", et~al." * } if$
 	    }
 	    { editor is.kanji.str$
 		{
		  ", " *
 		   editor #2 "{ff}" format.name$ duplicate$
 		   empty$
 			{pop$ editor #2 "{ll}" format.name$}
 			'skip$
 		   if$
 		 *
 		}
 		{" and " * editor #2 "{vv~}{ll}" format.name$ * }
 	      if$
 	    }
	  if$
	}
      if$
    }
  if$
}

FUNCTION {format.book.crossref}
{ volume empty$
    { "empty volume in " cite$ * "'s crossref of " * crossref * warning$
       title is.kanji.str$
 	{"  "} {"In "} if$
    }
    { volume is.kanji.str$
	{ volume }
	{ is.kanji.entry
	    {"第" volume * "巻" *}
	    {"Vol." volume tie.or.space.connect " of " *  }
	  if$
	}
      if$
    }
  if$
  editor empty$
  editor field.or.null author field.or.null =
  or
    { key empty$
	{ series empty$
	    { "need editor, key, or series for " cite$ * " to crossref " *
	      crossref * warning$
	      "" *
	    }
	    { series is.kanji.str$
		{ series ", " * swap$ * }
	        { "{\em " * series * "\/}" * }
	      if$
	    }
	  if$
	}
	{ key * }
      if$
    }
    { format.crossref.editor * }
  if$
  " \cite{" * crossref * "}" *
}

FUNCTION {format.incoll.inproc.crossref}
{ editor empty$
  editor field.or.null author field.or.null =
  or
    { key empty$
	{ booktitle empty$
	    { "need editor, key, or booktitle for " cite$ * " to crossref " *
	      crossref * warning$
	      ""
	    }
 	    { booktitle is.kanji.str$
 		{ booktitle }
		{"In {\em " booktitle * "\/}" * }
 	       if$
 	    }
	  if$
	}
	{ "In " key * }
      if$
    }
    { title is.kanji.str$
 	{" " format.crossref.editor * }
 	{"In " format.crossref.editor * }
      if$
    }
  if$
  " \cite{" * crossref * "}" *
}


FUNCTION {article}
{ output.bibitem
  format.authors "author" output.check
  new.block
  format.date "year" output.check
  new.block
  format.title "title" output.check
  new.block
  crossref missing$
    { journal emphasize "journal" output.check
      format.vol.num.pages output
    }
    { format.article.crossref output.nonnull
      format.pages output
    }
  if$
  new.block
  note output
  fin.entry
}

FUNCTION {book}
{ output.bibitem
  author empty$
    { format.editors "author and editor" output.check }
    { format.authors output.nonnull
      crossref missing$
	{ "author and editor" editor either.or.check }
	'skip$
      if$
    }
  if$
  format.date "year" output.checka
  new.block
  format.btitle "title" output.check
  format.edition output
  crossref missing$
    { format.bvolume output
      new.block
      format.number.series output
      new.sentence
      publisher "publisher" output.checka
      address output
    }
    { new.block
      format.book.crossref output.nonnull
    }
  if$
  new.block
  note output
  fin.entry
}

FUNCTION {booklet}
{ output.bibitem
  format.authors output
  new.block
  format.date output
  new.block
  format.title "title" output.check
  howpublished address new.block.checkb
  howpublished output
  address output
  new.block
  note output
  fin.entry
}

FUNCTION {inbook}
{ output.bibitem
  author empty$
    { format.editors "author and editor" output.check }
    { format.authors output.nonnull
      crossref missing$
	{ "author and editor" editor either.or.check }
	'skip$
      if$
    }
  if$
  format.date "year" output.checka
  new.block
  format.btitle "title" output.check
  format.edition output
  crossref missing$
    { format.bvolume output
      format.chapter.pages "chapter and pages" output.check
      new.block
      format.number.series output
      new.sentence
      publisher "publisher" output.check
      address output
    }
    { format.chapter.pages "chapter and pages" output.check
      new.block
      format.book.crossref output.nonnull
    }
  if$
  new.block
% note output
  fin.entry
}

FUNCTION {incollection}
{ output.bibitem
  format.authors "author" output.check
  format.date "year" output.checka
  new.block
  format.title "title" output.check
  format.edition output
  new.block
  crossref missing$
    { format.in.ed.booktitle "booktitle" output.check
      format.bvolume output
      format.number.series output
      format.chapter.pages output
      new.sentence
      publisher "publisher" output.check
      address output
    }
    { format.incoll.inproc.crossref output.nonnull
      format.chapter.pages output
    }
  if$
  new.block
%  note output
  fin.entry
}

FUNCTION {inproceedings}
{ output.bibitem
  format.authors "author" output.check
  new.block
  format.title "title" output.check
  new.block
  crossref missing$
    { format.in.ed.booktitle "booktitle" output.check
      format.bvolume output
      format.number.series output
      format.pages output
      address empty$
	{ organization publisher new.sentence.checkb
	  organization output
	  publisher output
          new.block
	  format.date "year" output.checka
	}
	{ address output.nonnull
	  format.date "year" output.checka
	  new.sentence
	  organization output
	  publisher output
	}
      if$
    }
    { format.incoll.inproc.crossref output.nonnull
      format.pages output
    }
  if$
  new.block
  note output
  fin.entry
}

FUNCTION {conference} { inproceedings }

FUNCTION {manual}
{ output.bibitem
  author empty$
    { organization empty$
	'skip$
	{ organization output.nonnull
	  address output
	}
      if$
    }
    { format.authors output.nonnull }
  if$
  new.block
  format.date output
  new.block
  format.btitle "title" output.check
  format.edition output
  author empty$
    { organization empty$
	{ address new.block.checka
	  address output
	}
	'skip$
      if$
    }
    { organization address new.block.checkb
      organization output
      address output
    }
  if$
  new.block
  note output
  fin.entry
}

FUNCTION {mastersthesis}
{ output.bibitem
  format.authors "author" output.check
  format.date "year" output.checka
  new.block
  format.title "title" output.check
  new.block
  "Master's thesis" format.thesis.type output.nonnull
  school "school" output.check
  address output
  new.block
  note output
  fin.entry
}

FUNCTION {misc}
{ output.bibitem
  format.authors output
  new.block
  format.date output
  title howpublished new.block.checkb
  format.title output
  howpublished new.block.checka
  howpublished output
  new.block
  note output
  fin.entry
  empty.misc.check
}

FUNCTION {phdthesis}
{ output.bibitem
  format.authors "author" output.check
  format.date "year" output.checka
  new.block
  format.btitle "title" output.check
  new.block
  "PhD thesis" format.thesis.type output.nonnull
  school "school" output.check
  address output
  new.block
  note output
  fin.entry
}

FUNCTION {proceedings}
{ output.bibitem
  editor empty$
    { organization output }
    { format.editors output.nonnull }
  if$
  format.date "year" output.checka
  new.block
  format.btitle "title" output.check
  format.bvolume output
  format.number.series output
  address empty$
    { editor empty$
	{ publisher new.sentence.checka }
	{ organization publisher new.sentence.checkb
	  organization output
	}
      if$
      publisher output
    }
    { address output.nonnull
      new.sentence
      editor empty$
	'skip$
	{ organization output }
      if$
      publisher output
    }
  if$
  new.block
  note output
  fin.entry
}

FUNCTION {techreport}
{ output.bibitem
  format.authors "author" output.check
  format.date "year" output.checka
  new.block
  format.title "title" output.check
  new.block
  format.tr.number output.nonnull
  institution "institution" output.check
  address output
  new.block
  note output
  fin.entry
}

FUNCTION {unpublished}
{ output.bibitem
  format.authors "author" output.check
  new.block
  format.title "title" output.check
  new.block
  format.date output
  new.block
  note "note" output.check
  fin.entry
}

FUNCTION {default.type} { misc }

MACRO {jan} {"January"}
MACRO {feb} {"February"}
MACRO {mar} {"March"}
MACRO {apr} {"April"}
MACRO {may} {"May"}
MACRO {jun} {"June"}
MACRO {jul} {"July"}
MACRO {aug} {"August"}
MACRO {sep} {"September"}
MACRO {oct} {"October"}
MACRO {nov} {"November"}
MACRO {dec} {"December"}

MACRO {jjpsy}  {"心理学研究"}
MACRO {jpsyr}  {"心理学評論"}
MACRO {psyr}   {"Psychological Revieew"}
MACRO {jxp}    {"Journal of Experimental Psychology: General"}
MACRO {jxphpp} {"Journal of Experimental Psychology: Human Perception and Performance"}
MACRO {jxplmc} {"Journal of Experimental Psychology: Learning, Memory and Cognition"}


READ

FUNCTION {set.is.kanji.entry}
{
  author    field.or.null is.kanji.str$
  title     field.or.null is.kanji.str$ or
  editor    field.or.null is.kanji.str$ or
  journal   field.or.null is.kanji.str$ or
  booktitle field.or.null is.kanji.str$ or
  series    field.or.null is.kanji.str$ or
  'is.kanji.entry :=
}

ITERATE {set.is.kanji.entry}

FUNCTION {sortify}
{ purify$
  "l" change.case$
}

INTEGERS { len }

FUNCTION {chop.word}
{ 's :=
  'len :=
  s #1 len substring$ =
    { s len #1 + global.max$ substring$ }
    's
  if$
}

FUNCTION {format.lab.names}
{ 's :=
  s is.kanji.str$
  { s #1 "{ff}" format.name$
    duplicate$ empty$
      { pop$ s #1 "{ll}" format.name$ }
      { skip$ }
    if$
    s num.names$ duplicate$
    #2 >
      { pop$ " ほか." * }
      { #2 <
          'skip$
          { s #2 "{ff }{vv }{ll}{ jj}" format.name$ "others" =
              { " ほか." * }
              { "・" * s #2 "{ff}" format.name$ * }
            if$
          }
        if$
      }
    if$
  }
  {  s #1 "{vv~}{ll}" format.name$
     s num.names$ duplicate$
     #2 >
      { pop$ " et~al." * }
      { #2 <
          'skip$
          { s #2 "{ff }{vv }{ll}{ jj}" format.name$ "others" =
              { " et~al." * }
              { " \& " * s #2 "{vv~}{ll}" format.name$ * }
            if$
          }
        if$
      }
    if$
    }
  if$
}

FUNCTION {author.key.label}
{ author empty$
    { key empty$
	{ cite$ #1 #4 substring$ }
	'key
      if$
    }
    { author format.lab.names }
  if$
}

FUNCTION {author.editor.key.label}
{ author empty$
    { editor empty$
	{ key empty$
	    { cite$ #1 #4 substring$ }
	    'key
	  if$
	}
	{ editor format.lab.names }
      if$
    }
    { author format.lab.names }
  if$
}

FUNCTION {editor.key.label}
{ editor empty$
    { key empty$
	{ cite$ #1 #4 substring$ }
	'key
      if$
    }
    { editor format.lab.names }
  if$
}

FUNCTION {calc.name.label}
{ type$ "book" =
  type$ "inbook" =
  or
    'author.editor.key.label
    { type$ "proceedings" =
	'editor.key.label
	'author.key.label
      if$
    }
  if$
  'name.label :=
}

FUNCTION {calc.year.label}
{ year field.or.null purify$ #-1 #4 substring$
  'year.label :=
}

FUNCTION {calc.label}
{ calc.name.label calc.year.label
  name.label ", " * year.label *
  'label :=
}


FUNCTION {sort.format.names}
{ 's :=
  s is.kanji.str$
    { yomi empty$
        {"to sort, need yomi in " cite$ * warning$}
        { yomi 's := }
      if$
    }
    'skip$
  if$
  #1 'nameptr :=
  ""
  s num.names$ 'numnames :=
  numnames 'namesleft :=
    { namesleft #0 > }
    { nameptr #1 >
	{ "   " * }
	'skip$
      if$
      s nameptr "{vv{ } }{ll{ }}{  f{ }}{  jj{ }}" format.name$ 't :=
      nameptr numnames = t "others" = and
	{ "et al" * }
	{ t sortify * }
      if$
      nameptr #1 + 'nameptr :=
      namesleft #1 - 'namesleft :=
    }
  while$
}

FUNCTION {sort.format.title}
{ 't :=
  "A " #2
    "An " #3
      "The " #4 t chop.word
    chop.word
  chop.word
  sortify
  #1 global.max$ substring$
}

FUNCTION {author.sort}
{ author empty$
    { key empty$
	{ "to sort, need author or key in " cite$ * warning$
	  ""
	}
	{ key sortify }
      if$
    }
    { author sort.format.names }
  if$
}

FUNCTION {author.editor.sort}
{ author empty$
      { editor empty$
	{ key empty$
	    { "to sort, need author, editor, or key in " cite$ * warning$
	      ""
	    }
	    { key sortify }
	  if$
	}
	{ editor sort.format.names }
      if$
    }
    { author sort.format.names }
  if$
}

FUNCTION {editor.sort}
{ editor empty$
    { key empty$
	{ "to sort, need editor or key in " cite$ * warning$
	  ""
	}
	{ key sortify }
      if$
    }
    { editor sort.format.names }
  if$
}

%FUNCTION {}
%{
%
%}

FUNCTION {presort}
{ calc.label
  label sortify
  "    "
  *
  type$ "book" =
  type$ "inbook" =
  or
    'author.editor.sort
    { type$ "proceedings" =
	'editor.sort
	'author.sort
      if$
    }
  if$
  #1 entry.max$ substring$
  'sort.label :=
  sort.label
  *
  "    "
  *
  title field.or.null
  sort.format.title
  *
  #1 entry.max$ substring$
  sortify 'sort.key$ :=
}

ITERATE {presort}

SORT % BY name.label, year.label, sort.label, title

STRINGS { last.label next.extra }

INTEGERS { last.extra.num }

FUNCTION {initialize.extra.label.stuff}
{ #0 'last.extra.num :=
  #0 int.to.chr$ 'last.label :=
  "" 'next.extra :=
}

EXECUTE {initialize.extra.label.stuff}

FUNCTION {forward.pass}
{ label sortify last.label =
    { last.extra.num #1 + 'last.extra.num :=
      last.extra.num int.to.chr$ 'extra.label :=
    }
    { "a" chr.to.int$ 'last.extra.num :=
      "" 'extra.label :=
      label sortify 'last.label :=
    }
  if$
}

ITERATE {forward.pass}

FUNCTION {reverse.pass}
{ next.extra "b" =
    { "a" 'extra.label := }
    'skip$
  if$
  year.label extra.label * 'year.label :=
  extra.label 'next.extra :=
}

REVERSE {reverse.pass}

FUNCTION {bib.sort.order}
{ sort.label
  "    "
  *
  year field.or.null sortify
  *
  "    "
  *
  title field.or.null
  sort.format.title
  *
  #1 entry.max$ substring$
  'sort.key$ :=
}

ITERATE {bib.sort.order}

SORT % BY sort.label, year, title

FUNCTION {begin.bib}
{ preamble$ empty$
    'skip$
    { preamble$ write$ newline$ }
  if$
  "\begin{thebibliography}{}" write$ newline$
}

EXECUTE {begin.bib}

EXECUTE {init.state.consts}

ITERATE {call.type$}

FUNCTION {end.bib}
{ newline$
  "\end{thebibliography}" write$ newline$
}

EXECUTE {end.bib}

%</style>
\endinput
%%
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
%%
% \Finale
